#include "services_sbnd.fcl"
#include "simulationservices_sbnd.fcl"
#include "messages_sbnd.fcl"
#include "sam_sbnd.fcl"

#include "pmtRatioAna_config.fcl"

process_name: PMTRatioAna

services:
{
  # Load the service that manages root files for histograms.
  TFileService:              { fileName: "pmtratioana_tree_%s-%S.root" }
  RandomNumberGenerator:     {}
  message:                   @local::sbnd_message_services_prod # from messages_sbnd.fcl
  FileCatalogMetadata:       @local::sbnd_file_catalog_mc       # from sam_sbnd.fcl
                             @table::sbnd_services              # from services_sbnd.fcl
                             @table::sbnd_g4_services
			     @table::sbnd_simulation_services
   ParticleInventoryService: @local::standard_particleinventoryservice


}


#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1  # Number of events to create
}



# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

  analyzers:
  {
    pmtratioana: @local::pmtRatioAna
  }


  #define the producer and filter modules for this path, order matters,
  #filters reject all following items.  see lines starting physics.producers below

  ana: [pmtratioana]

  # end_paths is a keyword and contains the paths that do not modify the art::Event,
  # ie analyzers and output streams.  these all run simultaneously
  end_paths: [ana]
}